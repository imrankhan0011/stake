import{e as L,h as M}from"./DRfdS80Y.js";import{a as g,q as G}from"./BV84Ne7d.js";import{ag as Y}from"./DlWQCp_y.js";import{g as T}from"./C3Uqgz1j.js";import{i as H,c as q}from"./B_XU9Oa-.js";import{trackEvent as u,MixpanelEventsEnum as k}from"./D0wM6-Kb.js";import{a as W,g as B}from"./y9SWAMdf.js";import{n as I}from"./_x0WFvrY.js";import{c as D}from"./CZPpudFC.js";import{m as _}from"./Cy3Yv-EZ.js";import{i as l}from"./-2c5L_R-.js";import{i as J}from"./Cp5EkjuV.js";import{g as z}from"./Bhbbb5KL.js";function h(e){const i=new Uint8Array(e);let n="";for(const t of i)n+=String.fromCharCode(t);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function R(e){const i=e.replace(/-/g,"+").replace(/_/g,"/"),n=(4-i.length%4)%4,a=i.padEnd(i.length+n,"="),t=atob(a),d=new ArrayBuffer(t.length),s=new Uint8Array(d);for(let o=0;o<t.length;o++)s[o]=t.charCodeAt(o);return d}function A(){return $.stubThis((globalThis==null?void 0:globalThis.PublicKeyCredential)!==void 0&&typeof globalThis.PublicKeyCredential=="function")}const $={stubThis:e=>e};function O(e){const{id:i}=e;return{...e,id:R(i),transports:e.transports}}function V(e){return e==="localhost"||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}class m extends Error{constructor({message:i,code:n,cause:a,name:t}){super(i,{cause:a}),Object.defineProperty(this,"code",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.name=t??a.name,this.code=n}}function j({error:e,options:i}){var a,t,d;const{publicKey:n}=i;if(!n)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(i.signal instanceof AbortSignal)return new m({message:"Registration ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else if(e.name==="ConstraintError"){if(((a=n.authenticatorSelection)==null?void 0:a.requireResidentKey)===!0)return new m({message:"Discoverable credentials were required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",cause:e});if(i.mediation==="conditional"&&((t=n.authenticatorSelection)==null?void 0:t.userVerification)==="required")return new m({message:"User verification was required during automatic registration but it could not be performed",code:"ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE",cause:e});if(((d=n.authenticatorSelection)==null?void 0:d.userVerification)==="required")return new m({message:"User verification was required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",cause:e})}else{if(e.name==="InvalidStateError")return new m({message:"The authenticator was previously registered",code:"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",cause:e});if(e.name==="NotAllowedError")return new m({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if(e.name==="NotSupportedError")return n.pubKeyCredParams.filter(o=>o.type==="public-key").length===0?new m({message:'No entry in pubKeyCredParams was of type "public-key"',code:"ERROR_MALFORMED_PUBKEYCREDPARAMS",cause:e}):new m({message:"No available authenticator supported any of the specified pubKeyCredParams algorithms",code:"ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",cause:e});if(e.name==="SecurityError"){const s=globalThis.location.hostname;if(V(s)){if(n.rp.id!==s)return new m({message:`The RP ID "${n.rp.id}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else return new m({message:`${globalThis.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e})}else if(e.name==="TypeError"){if(n.user.id.byteLength<1||n.user.id.byteLength>64)return new m({message:"User ID was not between 1 and 64 characters",code:"ERROR_INVALID_USER_ID_LENGTH",cause:e})}else if(e.name==="UnknownError")return new m({message:"The authenticator was unable to process the specified options, or could not create a new credential",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}class Z{constructor(){Object.defineProperty(this,"controller",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}createNewAbortSignal(){if(this.controller){const n=new Error("Cancelling existing WebAuthn API call for new one");n.name="AbortError",this.controller.abort(n)}const i=new AbortController;return this.controller=i,i.signal}cancelCeremony(){if(this.controller){const i=new Error("Manually cancelling existing WebAuthn API call");i.name="AbortError",this.controller.abort(i),this.controller=void 0}}}const C=new Z,X=["cross-platform","platform"];function U(e){if(e&&!(X.indexOf(e)<0))return e}async function Q(e){var b;!e.optionsJSON&&e.challenge&&(console.warn("startRegistration() was not called correctly. It will try to continue with the provided options, but this call should be refactored to use the expected call structure instead. See https://simplewebauthn.dev/docs/packages/browser#typeerror-cannot-read-properties-of-undefined-reading-challenge for more information."),e={optionsJSON:e});const{optionsJSON:i,useAutoRegister:n=!1}=e;if(!A())throw new Error("WebAuthn is not supported in this browser");const a={...i,challenge:R(i.challenge),user:{...i.user,id:R(i.user.id)},excludeCredentials:(b=i.excludeCredentials)==null?void 0:b.map(O)},t={};n&&(t.mediation="conditional"),t.publicKey=a,t.signal=C.createNewAbortSignal();let d;try{d=await navigator.credentials.create(t)}catch(y){throw j({error:y,options:t})}if(!d)throw new Error("Registration was not completed");const{id:s,rawId:o,response:c,type:r}=d;let S;typeof c.getTransports=="function"&&(S=c.getTransports());let v;if(typeof c.getPublicKeyAlgorithm=="function")try{v=c.getPublicKeyAlgorithm()}catch(y){w("getPublicKeyAlgorithm()",y)}let p;if(typeof c.getPublicKey=="function")try{const y=c.getPublicKey();y!==null&&(p=h(y))}catch(y){w("getPublicKey()",y)}let f;if(typeof c.getAuthenticatorData=="function")try{f=h(c.getAuthenticatorData())}catch(y){w("getAuthenticatorData()",y)}return{id:s,rawId:h(o),response:{attestationObject:h(c.attestationObject),clientDataJSON:h(c.clientDataJSON),transports:S,publicKeyAlgorithm:v,publicKey:p,authenticatorData:f},type:r,clientExtensionResults:d.getClientExtensionResults(),authenticatorAttachment:U(d.authenticatorAttachment)}}function w(e,i){console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${e}. You should report this error to them.
`,i)}function ee(){if(!A())return P.stubThis(new Promise(i=>i(!1)));const e=globalThis.PublicKeyCredential;return(e==null?void 0:e.isConditionalMediationAvailable)===void 0?P.stubThis(new Promise(i=>i(!1))):P.stubThis(e.isConditionalMediationAvailable())}const P={stubThis:e=>e};function ie({error:e,options:i}){const{publicKey:n}=i;if(!n)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(i.signal instanceof AbortSignal)return new m({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else{if(e.name==="NotAllowedError")return new m({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if(e.name==="SecurityError"){const a=globalThis.location.hostname;if(V(a)){if(n.rpId!==a)return new m({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else return new m({message:`${globalThis.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e})}else if(e.name==="UnknownError")return new m({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}async function ne(e){var f,b;!e.optionsJSON&&e.challenge&&(console.warn("startAuthentication() was not called correctly. It will try to continue with the provided options, but this call should be refactored to use the expected call structure instead. See https://simplewebauthn.dev/docs/packages/browser#typeerror-cannot-read-properties-of-undefined-reading-challenge for more information."),e={optionsJSON:e});const{optionsJSON:i,useBrowserAutofill:n=!1,verifyBrowserAutofillInput:a=!0}=e;if(!A())throw new Error("WebAuthn is not supported in this browser");let t;((f=i.allowCredentials)==null?void 0:f.length)!==0&&(t=(b=i.allowCredentials)==null?void 0:b.map(O));const d={...i,challenge:R(i.challenge),allowCredentials:t},s={};if(n){if(!await ee())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1&&a)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');s.mediation="conditional",d.allowCredentials=[]}s.publicKey=d,s.signal=C.createNewAbortSignal();let o;try{o=await navigator.credentials.get(s)}catch(y){throw ie({error:y,options:s})}if(!o)throw new Error("Authentication was not completed");const{id:c,rawId:r,response:S,type:v}=o;let p;return S.userHandle&&(p=h(S.userHandle)),{id:c,rawId:h(r),response:{authenticatorData:h(S.authenticatorData),clientDataJSON:h(S.clientDataJSON),signature:h(S.signature),userHandle:p},type:v,clientExtensionResults:o.getClientExtensionResults(),authenticatorAttachment:U(o.authenticatorAttachment)}}function ae(){return A()?PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable():new Promise(e=>e(!1))}const te={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"PreparePasskeyAuthentication"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"preparePasskeyAuthentication"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sessionId"}},{kind:"Field",name:{kind:"Name",value:"options"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"challenge"}},{kind:"Field",name:{kind:"Name",value:"timeout"}},{kind:"Field",name:{kind:"Name",value:"rpId"}},{kind:"Field",name:{kind:"Name",value:"allowCredentials"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"transports"}}]}},{kind:"Field",name:{kind:"Name",value:"userVerification"}},{kind:"Field",name:{kind:"Name",value:"hints"}},{kind:"Field",name:{kind:"Name",value:"extensions"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"appid"}},{kind:"Field",name:{kind:"Name",value:"credProps"}},{kind:"Field",name:{kind:"Name",value:"hmacCreateSecret"}},{kind:"Field",name:{kind:"Name",value:"minPinLength"}}]}}]}}]}}]}}]},de={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyPasskeyAuthentication"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"sessionId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"authenticationResponse"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyPasskeyAuthenticationAuthenticationResponseInput"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyPasskeyAuthentication"},arguments:[{kind:"Argument",name:{kind:"Name",value:"sessionId"},value:{kind:"Variable",name:{kind:"Name",value:"sessionId"}}},{kind:"Argument",name:{kind:"Name",value:"authenticationResponse"},value:{kind:"Variable",name:{kind:"Name",value:"authenticationResponse"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verified"}},{kind:"Field",name:{kind:"Name",value:"deviceType"}},{kind:"Field",name:{kind:"Name",value:"authenticatorName"}},{kind:"Field",name:{kind:"Name",value:"lastUsed"}},{kind:"Field",name:{kind:"Name",value:"notifyUnknownCredential"}},{kind:"Field",name:{kind:"Name",value:"userLogin"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"loginToken"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}}]}}]}}]}}]},le={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"PreparePasskeyRegistration"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"preparePasskeyRegistration"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"challenge"}},{kind:"Field",name:{kind:"Name",value:"rp"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"id"}}]}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"displayName"}}]}},{kind:"Field",name:{kind:"Name",value:"pubKeyCredParams"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"alg"}}]}},{kind:"Field",name:{kind:"Name",value:"timeout"}},{kind:"Field",name:{kind:"Name",value:"excludeCredentials"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"transports"}}]}},{kind:"Field",name:{kind:"Name",value:"authenticatorSelection"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"authenticatorAttachment"}},{kind:"Field",name:{kind:"Name",value:"requireResidentKey"}},{kind:"Field",name:{kind:"Name",value:"userVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"hints"}},{kind:"Field",name:{kind:"Name",value:"attestation"}},{kind:"Field",name:{kind:"Name",value:"attestationFormats"}},{kind:"Field",name:{kind:"Name",value:"extensions"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"appid"}},{kind:"Field",name:{kind:"Name",value:"credProps"}},{kind:"Field",name:{kind:"Name",value:"hmacCreateSecret"}},{kind:"Field",name:{kind:"Name",value:"minPinLength"}}]}}]}}]}}]},se={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyPasskeyRegistration"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"registrationResponse"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyPasskeyRegistrationRegistrationResponseInput"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"deviceName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyPasskeyRegistration"},arguments:[{kind:"Argument",name:{kind:"Name",value:"registrationResponse"},value:{kind:"Variable",name:{kind:"Name",value:"registrationResponse"}}},{kind:"Argument",name:{kind:"Name",value:"deviceName"},value:{kind:"Variable",name:{kind:"Name",value:"deviceName"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verified"}},{kind:"Field",name:{kind:"Name",value:"deviceType"}},{kind:"Field",name:{kind:"Name",value:"authenticatorName"}}]}}]}}]},oe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetUserPasskeys"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"getUserPasskeys"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"authenticatorName"}},{kind:"Field",name:{kind:"Name",value:"deviceName"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"lastUsedAt"}}]}}]}}]}}]},re={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"CompleteLoginUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"loginToken"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"tfaToken"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"sessionName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"blackbox"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"loginCode"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"loginMethod"}},type:{kind:"NamedType",name:{kind:"Name",value:"LoginMethod"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"completeLoginUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"loginToken"},value:{kind:"Variable",name:{kind:"Name",value:"loginToken"}}},{kind:"Argument",name:{kind:"Name",value:"tfaToken"},value:{kind:"Variable",name:{kind:"Name",value:"tfaToken"}}},{kind:"Argument",name:{kind:"Name",value:"sessionName"},value:{kind:"Variable",name:{kind:"Name",value:"sessionName"}}},{kind:"Argument",name:{kind:"Name",value:"blackbox"},value:{kind:"Variable",name:{kind:"Name",value:"blackbox"}}},{kind:"Argument",name:{kind:"Name",value:"loginCode"},value:{kind:"Variable",name:{kind:"Name",value:"loginCode"}}},{kind:"Argument",name:{kind:"Name",value:"loginMethod"},value:{kind:"Variable",name:{kind:"Name",value:"loginMethod"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"UserAuthenticatedSession"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"UserAuthenticatedSession"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"UserAuthenticatedSession"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"session"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"UserSession"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"UserAuth"}}]}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"UserSession"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"UserSession"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"sessionName"}},{kind:"Field",name:{kind:"Name",value:"ip"}},{kind:"Field",name:{kind:"Name",value:"country"}},{kind:"Field",name:{kind:"Name",value:"city"}},{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"updatedAt"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"UserAuth"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"User"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"email"}},{kind:"Field",name:{kind:"Name",value:"hasPhoneNumberVerified"}},{kind:"Field",name:{kind:"Name",value:"hasEmailVerified"}},{kind:"Field",name:{kind:"Name",value:"hasPassword"}},{kind:"Field",name:{kind:"Name",value:"intercomHash"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"hasTfaEnabled"}},{kind:"Field",name:{kind:"Name",value:"hasOauth"}},{kind:"Field",name:{kind:"Name",value:"isMaxBetEnabled"}},{kind:"Field",name:{kind:"Name",value:"isReferred"}},{kind:"Field",name:{kind:"Name",value:"isSportsbookExcluded"}},{kind:"Field",name:{kind:"Name",value:"livestreamNewFeatureEarlyAccess"}},{kind:"Field",name:{kind:"Name",value:"registeredWithVpn"}},{kind:"Field",name:{kind:"Name",value:"kycBasic"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"country"}}]}},{kind:"Field",name:{kind:"Name",value:"flags"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"flag"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}}]}},{kind:"Field",name:{kind:"Name",value:"signupCode"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"}}]}}]}},{kind:"Field",name:{kind:"Name",value:"roles"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"optionalFeatures"}},{kind:"Field",name:{kind:"Name",value:"balances"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"UserBalance"}}]}},{kind:"Field",name:{kind:"Name",value:"activeClientSeed"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"seed"}}]}},{kind:"Field",name:{kind:"Name",value:"previousServerSeed"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"seed"}}]}},{kind:"Field",name:{kind:"Name",value:"activeDepositBonus"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"}},{kind:"Field",name:{kind:"Name",value:"minDepositValue"}},{kind:"Field",name:{kind:"Name",value:"maxDepositValue"}},{kind:"Field",name:{kind:"Name",value:"maxBetMultiplier"}},{kind:"Field",name:{kind:"Name",value:"bonusMultiplier"}},{kind:"Field",name:{kind:"Name",value:"expectedAmountMultiplier"}},{kind:"Field",name:{kind:"Name",value:"currency"}},{kind:"Field",name:{kind:"Name",value:"currencyType"}}]}},{kind:"Field",name:{kind:"Name",value:"activeServerSeed"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"seedHash"}},{kind:"Field",name:{kind:"Name",value:"nextSeedHash"}},{kind:"Field",name:{kind:"Name",value:"nonce"}},{kind:"Field",name:{kind:"Name",value:"blocked"}}]}},{kind:"Field",name:{kind:"Name",value:"veriffStatus"}},{kind:"Field",name:{kind:"Name",value:"verifications"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"UserVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"ageVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"AgeVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"addressVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"AddressVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"documentVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"DocumentVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"riskVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"RiskVerification"}}]}},{kind:"Field",name:{kind:"Name",value:"employmentVerification"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"EmploymentVerification"}}]}}]}},{kind:"Field",name:{kind:"Name",value:"termsOfService"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"}}]}},{kind:"Field",name:{kind:"Name",value:"veriffBiometricVerificationStatus"}},{kind:"Field",name:{kind:"Name",value:"notificationCount"}},{kind:"Field",name:{kind:"Name",value:"currentPlaySession"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fitToPlay"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"UserBalance"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"UserBalance"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"available"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"amount"}},{kind:"Field",name:{kind:"Name",value:"currency"}}]}},{kind:"Field",name:{kind:"Name",value:"vault"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"amount"}},{kind:"Field",name:{kind:"Name",value:"currency"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"UserVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityUserVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"}},{kind:"Field",name:{kind:"Name",value:"verified"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"AgeVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityAgeVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"birthDate"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"expireAt"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"verified"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"AddressVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityAddressVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"city"}},{kind:"Field",name:{kind:"Name",value:"country"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"expireAt"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"state"}},{kind:"Field",name:{kind:"Name",value:"street"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"verified"}},{kind:"Field",name:{kind:"Name",value:"zip"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"DocumentVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityDocumentVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"documentBirthDate"}},{kind:"Field",name:{kind:"Name",value:"documentCity"}},{kind:"Field",name:{kind:"Name",value:"documentCountry"}},{kind:"Field",name:{kind:"Name",value:"documentExpiry"}},{kind:"Field",name:{kind:"Name",value:"documentFirstName"}},{kind:"Field",name:{kind:"Name",value:"documentId"}},{kind:"Field",name:{kind:"Name",value:"documentLastName"}},{kind:"Field",name:{kind:"Name",value:"documentNationality"}},{kind:"Field",name:{kind:"Name",value:"documentState"}},{kind:"Field",name:{kind:"Name",value:"documentStreet"}},{kind:"Field",name:{kind:"Name",value:"documentType"}},{kind:"Field",name:{kind:"Name",value:"documentZip"}},{kind:"Field",name:{kind:"Name",value:"expireAt"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"verified"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"RiskVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityRiskVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"expireAt"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"nationalityCountry"}},{kind:"Field",name:{kind:"Name",value:"nonPoliticallyExposed"}},{kind:"Field",name:{kind:"Name",value:"nonThirdPartyAccount"}},{kind:"Field",name:{kind:"Name",value:"preferredName"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"verified"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"EmploymentVerification"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"IdentityEmploymentVerification"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"active"}},{kind:"Field",name:{kind:"Name",value:"createdAt"}},{kind:"Field",name:{kind:"Name",value:"employerCity"}},{kind:"Field",name:{kind:"Name",value:"employerCountry"}},{kind:"Field",name:{kind:"Name",value:"employerName"}},{kind:"Field",name:{kind:"Name",value:"employerPhone"}},{kind:"Field",name:{kind:"Name",value:"employerState"}},{kind:"Field",name:{kind:"Name",value:"employerStreet"}},{kind:"Field",name:{kind:"Name",value:"employerZip"}},{kind:"Field",name:{kind:"Name",value:"expireAt"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"type"}},{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"name"}}]}},{kind:"Field",name:{kind:"Name",value:"verified"}},{kind:"Field",name:{kind:"Name",value:"occupation"}}]}}]},me={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"InvalidatePasskeySession"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"sessionId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"invalidatePasskeySession"},arguments:[{kind:"Argument",name:{kind:"Name",value:"sessionId"},value:{kind:"Variable",name:{kind:"Name",value:"sessionId"}}}]}]}}]},Ie=10;let x=!1,K=null;const ue=()=>x,De=e=>{x=e},E=e=>{K=e},ke=()=>K;function F(e,i,n){I.open(D({positive:e,title:i,body:n}))}const ce=e=>{var i,n,a;return{...e,pubKeyCredParams:e.pubKeyCredParams.map(t=>({...t,type:"public-key"})),excludeCredentials:((i=e.excludeCredentials)==null?void 0:i.map(t=>({id:t.id,type:"public-key",transports:t.transports})))??void 0,authenticatorSelection:e.authenticatorSelection?{...e.authenticatorSelection,authenticatorAttachment:e.authenticatorSelection.authenticatorAttachment,requireResidentKey:e.authenticatorSelection.requireResidentKey??void 0,userVerification:e.authenticatorSelection.userVerification,residentKey:e.authenticatorSelection.residentKey}:void 0,hints:((n=e.hints)==null?void 0:n.map(t=>t))??void 0,attestation:e.attestation,attestationFormats:(a=e.attestationFormats)==null?void 0:a.filter(t=>t!==null),rp:{...e.rp,id:e.rp.id??void 0},extensions:e.extensions?{...e.extensions,appid:e.extensions.appid??void 0,credProps:e.extensions.credProps??void 0,hmacCreateSecret:e.extensions.hmacCreateSecret??void 0,minPinLength:e.extensions.minPinLength??void 0}:void 0}},ve=e=>{var i;return{...e,id:e.id,rawId:e.rawId,response:{...e.response,attestationObject:e.response.attestationObject,clientDataJSON:e.response.clientDataJSON,transports:((i=e.response.transports)==null?void 0:i.join(","))||""},type:e.type,clientExtensionResults:JSON.stringify(e.clientExtensionResults),authenticatorAttachment:e.authenticatorAttachment}},Ne=e=>{var i,n;return{...e,allowCredentials:((i=e.allowCredentials)==null?void 0:i.map(a=>({id:a.id,type:"public-key",transports:a.transports})))??void 0,extensions:e.extensions?{appid:e.extensions.appid??void 0,credProps:e.extensions.credProps??void 0,hmacCreateSecret:e.extensions.hmacCreateSecret??void 0,minPinLength:e.extensions.minPinLength??void 0}:void 0,hints:((n=e.hints)==null?void 0:n.map(a=>a))??void 0,rpId:e.rpId??void 0,userVerification:e.userVerification}},pe=e=>({...e,clientExtensionResults:JSON.stringify(e.clientExtensionResults)}),N={authenticator:l._("Authenticator"),authenticatorNotAvailableTitle:l._("No Authentication Method Found"),authenticatorNotAvailableMessage:l._("To create a passkey, your device must have Face ID, Touch ID, a PIN, or another security method enabled."),browserNotSupportedTitle:l._("Passkeys Not Supported in This Browser"),browserNotSupportedMessage:l._("Try creating your passkey using a supported browser, such as Chrome, Safari, or Edge."),createdOn:l._("Created on"),createPasskey:l._("Create Passkey"),delete:l._("Delete"),deleteErrorTitle:l._("Unable to Delete Passkey"),deleteGenericError:l._("There was a problem with this request, please try again."),device:l._("Device"),enable2faTitle:l._("Enable 2FA"),enable2faMessage:l._("In order for you to create a passkey you will have to enable 2FA"),helpCentre:l._("Help Centre"),lastUsedAt:l._("Last Used"),none:l._("You have not set any passkeys."),passkeyAlreadyExistsTitle:l._("Passkey Already Exists"),passkeyAlreadyExistsMessage:l._("A passkey for your account is already saved on this device."),passkeyCreatedMessage:l._("Your new passkey is now ready to use for secure sign-in."),passkeyCreatedFromHomeMessage:l._("Your new passkey is now ready to use for secure sign-in. Manage it in Settings."),passkeyCreatedTitle:l._("Passkey Created Successfully"),passkeyRegistrationFailedGenericMessage:l._("We couldn't create your passkey. Please try again or contact support."),passkeyRegistrationFailedGenericTitle:l._("Something Went Wrong"),passkeysDescription:{id:"With passkeys you don't need to remember complex passwords. Learn more about passkeys in the {helpCentre}"},passkeysTitle:({count:e,maxCount:i})=>({id:"Passkeys ({count}/{maxCount})",values:{count:e,maxCount:i}}),unknown:l._("Unknown")},Ce=()=>{const e=T.subscribe({authenticate:async({userAuthenticatedSession:i,type:n,subtype:a,code:t})=>{var d;if(ue()&&n==="authenticate"&&a==="login"&&t!=="passkey")try{const s=ke();if(s&&(C.cancelCeremony(),await g(me,{sessionId:s}),E(null)),L==="production"&&!M&&i.session.user.hasTfaEnabled){const{data:o}=await G({doc:oe,load:{fetch},variables:{}});((d=o==null?void 0:o.user)==null?void 0:d.getUserPasskeys.length)===0&&await Se("home")}}catch{}}});return()=>{e()}},Se=async(e,i)=>{var S,v;const n=z(J);if(!A()){e==="settings"&&F(!1,n._(N.browserNotSupportedTitle),n._(N.browserNotSupportedMessage)),u(k.PASSKEY_CREATION_NOT_SUPPORTED,{reason:"browser_not_supported"});return}if(!await ae()){e==="settings"&&F(!1,n._(N.authenticatorNotAvailableTitle),n._(N.authenticatorNotAvailableMessage)),u(k.PASSKEY_CREATION_NOT_SUPPORTED,{reason:"authenticator_not_available"});return}const a=await g(le,{});if(!(a!=null&&a.data)||!a.data.preparePasskeyRegistration){e==="settings"&&F(!1,n._(N.passkeyRegistrationFailedGenericTitle),n._(N.passkeyRegistrationFailedGenericMessage)),u(k.PASSKEY_CREATION_NOT_SUPPORTED,{reason:"api_error"});return}const t=ce(a.data.preparePasskeyRegistration);let d;try{if(u(k.PASSKEY_CREATION_STARTED,{touchpoint:e}),d=await Q({optionsJSON:t}),!(d!=null&&d.response))throw new Error("Failed to start registration")}catch(p){p instanceof m&&p.name==="InvalidStateError"?(F(!1,n._(N.passkeyAlreadyExistsTitle),n._(N.passkeyAlreadyExistsMessage)),u(k.PASSKEY_CREATION_FAILED,{error_message:"passkey_already_exists"})):p instanceof m&&(p.name==="NotAllowedError"||p.name==="AbortError")?u(k.PASSKEY_CREATION_FAILED,{error_message:"user_cancelled"}):(F(!1,n._(N.passkeyRegistrationFailedGenericTitle),n._(N.passkeyRegistrationFailedGenericMessage)),u(k.PASSKEY_CREATION_FAILED,{error_message:"api_error"}));return}const s=ve(d),o=((S=W())==null?void 0:S.device)||n._(N.unknown),r=(v=(await g(se,{registrationResponse:s,deviceName:o})).data)==null?void 0:v.verifyPasskeyRegistration;r!=null&&r.verified?(i!==void 0&&i(),F(!0,n._(N.passkeyCreatedTitle),e==="settings"?n._(N.passkeyCreatedMessage):n._(N.passkeyCreatedFromHomeMessage)),H.next({type:"passkeyCreated"}),u(k.PASSKEY_CREATED,{authenticator_name:r.authenticatorName,device_type:r.deviceType,touchpoint:e})):(F(!1,n._(N.passkeyRegistrationFailedGenericTitle),n._(N.passkeyRegistrationFailedGenericMessage)),u(k.PASSKEY_CREATION_FAILED,{error_message:"verification_failed"}))},Oe=async(e,i,n,a)=>{var d,s,o,c;let t=!1;try{const r=await g(te,{});if(!r.data||r.errors)throw new Error("Failed to prepare passkey authentication");E(r.data.preparePasskeyAuthentication.sessionId);const S=await ne({optionsJSON:Ne(r.data.preparePasskeyAuthentication.options),useBrowserAutofill:i});t=!0,a&&a(!0),u(k.PASSKEY_SIGN_IN_STARTED,{browser_autofill:i});const v=await g(de,{sessionId:r.data.preparePasskeyAuthentication.sessionId,authenticationResponse:pe(S)});if(E(null),v.errors||!v.data||!v.data.verifyPasskeyAuthentication.verified){if((d=v.data)!=null&&d.verifyPasskeyAuthentication.notifyUnknownCredential){console.error("request login: ","Invalid passkey authentication"),I.open(D({title:n._(_.invalidPasskeyTitle),body:n._(_.invalidPasskeyMessage),positive:!1,persistent:!1})),u(k.PASSKEY_SIGN_IN_FAILED,{error_message:"invalid_passkey",browser_autofill:i});return}throw new Error("Failed to verify passkey authentication")}const p=v.data.verifyPasskeyAuthentication.userLogin;if(!p)throw new Error("No user found that matches the credentials provided");u(k.PASSKEY_SIGN_IN_SUCCESSFUL,{browser_autofill:i,device_type:v.data.verifyPasskeyAuthentication.deviceType,authenticator_name:v.data.verifyPasskeyAuthentication.authenticatorName}),u(k.PASSKEY_LAST_USED,{last_used_time:v.data.verifyPasskeyAuthentication.lastUsed});const f=await g(re,{loginToken:p.loginToken,tfaToken:void 0,sessionName:B(),blackbox:((c=(o=(s=window==null?void 0:window.IGLOO)==null?void 0:s.getBlackbox)==null?void 0:o.call(s))==null?void 0:c.blackbox)||"no blackbox",loginMethod:Y.passkey});f.data&&(await q("auth"),e("complete",f.data),T.next({type:"authenticate",subtype:"login",userAuthenticatedSession:f.data.completeLoginUser,code:"passkey"}),T.next({type:"firstUserResponse",user:f.data.completeLoginUser.session.user}))}catch(r){t&&(r instanceof m&&r.name==="AbortError"?u(k.PASSKEY_SIGN_IN_FAILED,{error_message:"user_cancelled",browser_autofill:i}):r instanceof m&&r.name==="NotAllowedError"?u(k.PASSKEY_SIGN_IN_FAILED,{error_message:"no_passkeys_available",browser_autofill:i}):(console.error("request login: ",r),I.open(D({title:n._(_.unableToSignInTitle),body:n._(_.unableToSignInMessage),positive:!1,persistent:!1})),r instanceof m&&r.name==="NotSupportedError"?u(k.PASSKEY_SIGN_IN_FAILED,{error_message:"browser_not_supported",browser_autofill:i}):u(k.PASSKEY_SIGN_IN_FAILED,{error_message:"api_error",browser_autofill:i})))}finally{E(null),a&&a(!1)}};export{re as C,oe as G,Ie as M,ee as a,A as b,Se as c,Oe as h,ue as i,N as m,ae as p,De as s,Ce as u};
