class u{constructor(){this.subscriptions=new Set}unsubscribe(s){typeof window>"u"||this.subscriptions.delete(s)}subscribe(s){if(typeof window>"u")return()=>{};if(typeof s=="function"){const t=s;return this.subscriptions.add(t),()=>this.unsubscribe(t)}const i=s,n=t=>{const e=i[t.type];e&&e(t)};return this.subscriptions.add(n),()=>this.unsubscribe(n)}next(s){typeof window>"u"||this.subscriptions.forEach(i=>{i(s)})}}export{u as E};
