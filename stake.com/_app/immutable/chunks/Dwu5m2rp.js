import{i as o}from"./-2c5L_R-.js";import{ap as R,aq as _,ar as E,as as I,B as a}from"./DlWQCp_y.js";import{_ as k}from"./CMNPK1gw.js";const t={baccarat:o._("Baccarat"),bars:o._("Bars"),blackjack:o._("Blackjack"),cases:o._("Cases"),packs:o._("Packs"),diamonds:o._("Diamonds"),dice:o._("Dice"),darts:o._("Darts"),flip:o._("Flip"),hilo:o._("Hilo"),keno:o._("Keno"),limbo:o._("Limbo"),dragonTower:o._("Dragon Tower"),mines:o._("Mines"),slide:o._("Slide"),plinko:o._("Plinko"),primedice:o._("Primedice"),pump:o._("Pump"),chicken:o._("Chicken"),roulette:o._("Roulette"),rockpaperscissors:o._("Rock Paper Scissors"),slotsSamurai:o._("Blue Samurai"),slots:o._("Scarab Spin"),snakes:o._("Snakes"),wheel:o._("Wheel"),difficulty:o._("Difficulty"),videoPoker:o._("Video Poker"),slotsTomeOfLife:o._("Tome of Life"),crash:o._("Crash"),game:o._("Game"),clientSeed:o._("Client Seed"),serverSeed:o._("Server Seed"),nonce:o._("Nonce"),hash:o._("Hash"),seed:o._("Seed"),risk:o._("Risk"),row:o._("Rows"),segments:o._("Segments"),minesCount:o._("Mines"),barsTilesCount:o._("Bars Count"),roundIndex:o._("Round"),low:o._("Low"),medium:o._("Medium"),high:o._("High"),isSpecial:o._("Is special spin"),samuraiSlotsPreviousSpecialSpinsCount:o._("Past special free spins count")},M=["D","H","S","C"],D=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],A=k.flatten(D.map(e=>M.map(s=>({rank:e,suit:s})))),g=e=>e.map(s=>A[s]),Y=[2,3,4,5,6,7,8,9,0,0,0,0,1],N=e=>Y[U(e)],f=e=>k.sum(e.map(N))%10,U=e=>Math.floor(e/4),F=[[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,0,1],[0,0,1,1,1,1,1,1,0,0],[0,0,0,0,1,1,1,1,0,0],[0,0,0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,0,0,0]],K=e=>{const s=e;let n=s.slice(0,2),p=s.slice(2,4),c=s.slice(4,6),d=f(p),m=f(n);if(d<8&&m<8){if(m<=5){const S=k.head(c),y=N(S);if(c=c.slice(1),n=[...n,S],m=f(n),F[d][y]){const L=c[0];c=c.slice(1),p=[...p,L],d=f(p)}}else if(d<=5){const S=c[0];c=c.slice(1),p=[...p,S],d=f(p)}}const P=m>d&&R.player||d>m&&R.banker||R.tie;return{playerCards:n,bankerCards:p,result:P}},z=e=>{const{playerCards:s,bankerCards:n,result:p}=K(e);return{playerCards:g(s),bankerCards:g(n),result:p,scale:1}},w=({board:e,difficulty:s})=>({board:e,difficulty:s}),B=e=>{const s=g(e);return{scale:1,noStatus:!0,player:[{cards:[s[0],s[1]],value:0,actions:[]}],dealer:[{cards:[s[2],s[3]],value:0,actions:[]}],cards:s.slice(4)}},x=({float:e,result:s,difficulty:n})=>({float:e,result:s,difficulty:n}),H=({floats:e,cards:s})=>({floats:e,cards:s}),G=[_.green,_.purple,_.yellow,_.red,_.cyan,_.orange,_.blue],W=e=>({hand:e.map(s=>G[s])}),V=({rounds:e,difficulty:s})=>({rounds:e,difficulty:s}),j=e=>({rounds:e,preview:!0}),X=e=>({disabled:!0,target:"0",condition:"above",status:"positive",result:e}),q=({rotation:e,distance:s,multiplier:n,difficulty:p})=>({rotation:e,distance:s,multiplier:n,difficulty:p}),J=e=>({scale:1,startCard:null,rounds:g(e).map(n=>({card:n}))}),Q=e=>({scale:1,drawnNumbers:e,selectedNumbers:e}),Z=e=>({value:e}),$=e=>({scale:1,rounds:Array(25).fill(1).map((s,n)=>({field:n})),mines:e}),ee=(e,{plinkoRisk:s,plinkoRow:n})=>({risk:s,rows:Number(n),path:e.map(p=>p?E.R:E.L)}),se=e=>({poppedValue:e}),te=e=>({deathPoint:e}),oe=e=>({stacked:!1,result:e,chips:{}}),ae=e=>({rounds:e.map(n=>["rock","paper","scissors"][n])}),le=[{symbol:"s1",outer:.075,inner:.09},{symbol:"s2",outer:.075,inner:.09},{symbol:"s3",outer:.08,inner:.07},{symbol:"s4",outer:.08,inner:.06},{symbol:"s5",outer:.08,inner:.09},{symbol:"s6",outer:.08,inner:.08},{symbol:"s7",outer:.08,inner:.08},{symbol:"s8",outer:.08,inner:.065},{symbol:"s9",outer:.15,inner:.15},{symbol:"samurai",outer:.17,inner:.12},{symbol:"scatter",outer:0,inner:.04},{symbol:"wild",outer:.05,inner:.065}],ne=le.reduce((e,s,n)=>{if(n===0)return[s];{const p=e[e.length-1],c={symbol:s.symbol,outer:p.outer+s.outer,inner:p.inner+s.inner};return[...e,c]}},[]),re=(e,s)=>ne.find(p=>(s?p.outer:p.inner)>e).symbol,ie=(e,{samuraiSlotsRound:s,samuraiSlotsIsSpecial:n})=>{const p=e.map((m,P)=>{const S=(()=>{if(e.length===3)return!1;if(e.length===5)return P===0||P===4})();return m.map(y=>re(y,S))}),c=Number(s);return{currentRound:{type:n==="Yes"&&c!==0?I.special:I.regular,data:{view:p,paylines:[]}}}},ue=e=>({props:{type:"display",offsets:e}}),pe=({rolls:e,difficulty:s})=>({rolls:e,difficulty:s}),ce=(e,{wheelRisk:s,wheelSegments:n})=>({risk:s,segments:Number(n),multiplierIndex:e,multiplier:void 0,currency:void 0,amount:void 0}),de=e=>{const s=g(e);return{scale:1,playerHand:void 0,initialHand:s.slice(0,5),comingCards:s.slice(5,10)}},me=e=>({multiplier:e}),_e=e=>({multiplier:e}),Se=e=>({type:"result",offsets:e}),be=e=>({disabled:!0,target:"0",condition:"above",status:"positive",result:e,fairness:!0}),fe=[{label:t.baccarat,value:a.baccarat},{label:t.bars,value:a.bars},{label:t.blackjack,value:a.blackjack},{label:t.cases,value:a.cases},{label:t.packs,value:a.packs},{label:t.darts,value:a.darts},{label:t.diamonds,value:a.diamonds},{label:t.dice,value:a.dice},{label:t.flip,value:a.flip},{label:t.hilo,value:a.hilo},{label:t.keno,value:a.keno},{label:t.limbo,value:a.limbo},{label:t.mines,value:a.mines},{label:t.plinko,value:a.plinko},{label:t.primedice,value:a.primediceX},{label:t.pump,value:a.pump},{label:t.chicken,value:a.chicken},{label:t.roulette,value:a.roulette},{label:t.rockpaperscissors,value:a.rockPaperScissors},{label:t.slotsSamurai,value:a.slotsSamurai},{label:t.slots,value:a.slots},{label:t.snakes,value:a.snakes},{label:t.wheel,value:a.wheel},{label:t.videoPoker,value:a.videoPoker},{label:t.crash,value:a.crash},{label:t.slide,value:a.slide},{label:t.dragonTower,value:a.dragonTower},{label:t.slotsTomeOfLife,value:a.slotsTomeOfLife}].sort((e,s)=>e.value.localeCompare(s.value)),ge={easy:{count:3,size:4},medium:{count:2,size:3},hard:{count:1,size:2},expert:{count:1,size:3},master:{count:1,size:4}},Pe=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24"].map(e=>({label:e,value:e})),ye=["1","2","3","4","5"].map(e=>({label:e,value:e})),T=[{label:t.low,value:"low"},{label:t.medium,value:"medium"},{label:t.high,value:"high"}],Re=["8","9","10","11","12","13","14","15","16"].map(e=>({label:e,value:e})),ke=["10","20","30","40","50"].map(e=>({label:e,value:e})),Ee=["No","Yes"].map(e=>({label:e,value:e})),Ie=["easy","medium","hard","expert","master"].map(e=>({label:e,value:e})),Te=["easy","medium","hard","expert"].map(e=>({label:e,value:e})),Oe=["easy","medium","hard","expert"].map(e=>({label:e,value:e})),Ce=["easy","medium","hard","expert"].map(e=>({label:e,value:e})),ve=["easy","medium","hard","expert"].map(e=>({label:e,value:e})),he=["easy","medium","hard","expert","master"].map(e=>({label:e,value:e})),Ne=["easy","medium","hard","expert"].map(e=>({label:e,value:e})),Le="game",Me="clientSeed",De="serverSeed",Ae="nonce",Ye="hash",Ue="seed",Fe="minesCount",Ke="plinkoRisk",ze="plinkoRow",we="slotsRound",Be="slotsTomeOfLifeRound",xe="samuraiSlotsRound",He="samuraiSlotsIsSpecial",Ge="samuraiSlotsPreviousSpecialSpinsCount",We="wheelRisk",Ve="wheelSegments",je="dragonTowerDifficulty",Xe="casesDifficulty",qe="pumpDifficulty",Je="chickenDifficulty",Qe="snakesDifficulty",Ze="dartsDifficulty",$e="barsDifficulty",es="barsTilesCount",l={type:"select",props:{key:Le,options:fe,translateOptions:!0,label:t.game}},O=[{type:"input",props:{key:Ye,isNumber:!1,label:t.hash}},{type:"input",props:{key:Ue,isNumber:!1,label:t.seed}}],r=[{type:"input",props:{key:Me,isNumber:!1,label:t.clientSeed}},{type:"input",props:{key:De,isNumber:!1,label:t.serverSeed}},{type:"input",props:{key:Ae,isNumber:!0,label:t.nonce}}],i="seedsToBytes",u="bytesToNumber",b="shuffle",ss="edged",C="seedsToHex",v="hexToDecimal",h="multiEdged",ls={baccarat:{getResultProps:z,inputsMeta:[l,...r],steps:[i,u],config:{size:52,count:6}},bars:{getResultProps:w,inputsMeta:[l,...r,{type:"select",props:{key:$e,options:Ne,translateOptions:!0,label:t.difficulty}},{type:"select",props:{key:es,options:ye,translateOptions:!1,label:t.barsTilesCount}}],steps:[i,u],config:{size:1,count:30}},blackjack:{getResultProps:B,inputsMeta:[l,...r],steps:[i,u],config:{size:52,count:52}},cases:{getResultProps:x,inputsMeta:[l,...r,{type:"select",props:{key:Xe,options:Te,translateOptions:!0,label:t.difficulty}}],steps:[i,u],config:{size:1,count:1}},packs:{getResultProps:H,inputsMeta:[l,...r],steps:[i,u],config:{size:1,count:5}},darts:{getResultProps:q,inputsMeta:[l,...r,{type:"select",props:{key:Ze,options:Oe,translateOptions:!0,label:t.difficulty}}],steps:[i,u],config:{size:1,count:2}},diamonds:{getResultProps:W,inputsMeta:[l,...r],steps:[i,u],config:{size:7,count:5}},dice:{getResultProps:X,inputsMeta:[l,...r],steps:[i,u],config:{size:10001,count:1}},flip:{getResultProps:j,inputsMeta:[l,...r],steps:[i,u],config:{count:20,size:1}},hilo:{getResultProps:J,inputsMeta:[l,...r],steps:[i,u],config:{size:52,count:100}},keno:{getResultProps:Q,inputsMeta:[l,...r],steps:[i,u,b],config:{size:40,count:10,isShuffle:!0}},limbo:{getResultProps:Z,inputsMeta:[l,...r],steps:[i,u,ss],config:{size:2**24,count:1,edge:.01}},mines:{getResultProps:$,inputsMeta:[l,...r,{type:"select",props:{key:Fe,options:Pe,translateOptions:!1,label:t.minesCount}}],steps:[i,u,b],config:{size:25,count:24,isShuffle:!0}},plinko:{getResultProps:ee,inputsMeta:[l,...r,{type:"select",props:{key:Ke,options:T,translateOptions:!0,label:t.risk}},{type:"select",props:{key:ze,options:Re,translateOptions:!1,label:t.row}}],steps:[i,u],config:{size:2,count:20}},primediceX:{getResultProps:be,inputsMeta:[l,...r],steps:[i,u],config:{size:10001,count:1}},pump:{getResultProps:se,inputsMeta:[l,...r,{type:"select",props:{key:qe,options:Ce,translateOptions:!0,label:t.difficulty}}],steps:[i,u,b],config:{size:25,count:24,isShuffle:!0,difficultyRiskCount:{easy:1,medium:3,hard:5,expert:10}}},chicken:{getResultProps:te,inputsMeta:[l,...r,{type:"select",props:{key:Je,options:ve,translateOptions:!0,label:t.difficulty}}],steps:[i,u,b],config:{size:20,count:19,isShuffle:!0,difficultyRiskCount:{easy:1,medium:3,hard:5,expert:10}}},roulette:{getResultProps:oe,inputsMeta:[l,...r],steps:[i,u],config:{size:37,count:1}},rockPaperScissors:{getResultProps:ae,inputsMeta:[l,...r],steps:[i,u],config:{size:3,count:20}},slotsSamurai:{getResultProps:ie,inputsMeta:[l,...r,{type:"input",props:{key:xe,isNumber:!0,label:t.roundIndex}},{type:"input",props:{key:Ge,isNumber:!0,label:t.samuraiSlotsPreviousSpecialSpinsCount}},{type:"select",props:{key:He,label:t.isSpecial,options:Ee}}],steps:[i,u],config:({samuraiSlotsRound:e})=>{const s=Number(e);return{count:18*((s<0?0:s)+1),size:1}}},slots:{getResultProps:ue,inputsMeta:[l,...r,{type:"input",props:{key:we,isNumber:!0,label:t.roundIndex}}],steps:[i,u],config:({slotsRound:e})=>{const s=Number(e);return{count:5*((s<0?0:s)+1),isSlots:!0}}},snakes:{getResultProps:pe,inputsMeta:[l,...r,{type:"select",props:{key:Qe,options:he,translateOptions:!0,label:t.difficulty}}],steps:[i,u],config:{size:6,count:10}},wheel:{getResultProps:ce,inputsMeta:[l,...r,{type:"select",props:{key:We,options:T,translateOptions:!0,label:t.risk}},{type:"select",props:{key:Ve,options:ke,translateOptions:!1,label:t.segments}}],steps:[i,u],config:({wheelSegments:e})=>({size:Number(e),count:1})},videoPoker:{getResultProps:de,inputsMeta:[l,...r],steps:[i,u,b],config:{size:52,count:52,isShuffle:!0}},crash:{getResultProps:me,inputsMeta:[l,...O],steps:[C,v,h],config:{size:2**32,edge:.01}},slide:{getResultProps:_e,inputsMeta:[l,...O],steps:[C,v,h],config:{size:2**32,edge:.02}},dragonTower:{getResultProps:V,inputsMeta:[l,...r,{type:"select",props:{key:je,options:Ie,translateOptions:!0,label:t.difficulty}}],steps:[i,u,b],config:({dragonTowerDifficulty:e})=>ge[e]},slotsTomeOfLife:{getResultProps:Se,inputsMeta:[l,...r,{type:"input",props:{key:Be,isNumber:!0,label:t.roundIndex}}],steps:[i,u],config:({slotsTomeOfLifeRound:e})=>{const s=Number(e);return{count:5*((s<0?0:s)+1),isSlots:!0}}}};export{Ie as A,$e as B,Xe as C,je as D,ss as E,Te as F,ls as G,Ye as H,Qe as I,he as J,Be as K,Oe as L,Fe as M,Ae as N,Ne as O,Ke as P,ye as Q,T as R,i as S,G as T,re as U,We as W,ze as a,Ve as b,Ze as c,Je as d,es as e,u as f,b as g,C as h,v as i,h as j,Le as k,fe as l,Me as m,De as n,Ue as o,Pe as p,Re as q,qe as r,Ce as s,ve as t,we as u,xe as v,He as w,Ee as x,Ge as y,ke as z};
