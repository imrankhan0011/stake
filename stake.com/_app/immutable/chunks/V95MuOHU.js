import{C as F,F as P}from"./DlWQCp_y.js";import{e as M,a as B,c as L,b as R}from"./CXRDFmD6.js";import{j as U,g as S}from"./CFyBPWZT.js";import{f as D}from"./DaVVfAvY.js";import{_ as u}from"./CMNPK1gw.js";import{g as C,d as N,w as y}from"./Bhbbb5KL.js";import{n as G}from"./DKwX7yNB.js";const O={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"UserBalances"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"user"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"balances"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"available"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"amount"}},{kind:"Field",name:{kind:"Name",value:"currency"}}]}},{kind:"Field",name:{kind:"Name",value:"vault"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"amount"}},{kind:"Field",name:{kind:"Name",value:"currency"}}]}}]}}]}}]}}]};U.subscribe(i=>{f.addGlobalSocketEvent(i)});const p=(i,t,s)=>{const r=i.findLastIndex(a=>a.type===t),c=i.findLastIndex(a=>a.type===s);return r<c},k=(i,t)=>(i(t).forEach(r=>{r.identifier in t&&(t[r.identifier]=b(r,t[r.identifier]),W(t[r.identifier])&&(t=u.omit(t,r.identifier)))}),t);function b(i,t){return t.some(s=>s.type!==i.type)?[...t,i]:t}function W(i){const t=i.map(o=>o.type),s=t.includes("ROLLBACK"),r=t.includes("INITIAL_DEDUCTION")&&t.includes("WS_BALANCE_UPDATE")&&t.includes("GAME_FINISHED"),c=t.includes("INITIAL_DEDUCTION")&&t.includes("OPTIMISTIC_BALANCE_UPDATE")&&t.includes("RAW_BALANCE_SYNCED")&&t.includes("GAME_FINISHED")&&p(i,"OPTIMISTIC_BALANCE_UPDATE","RAW_BALANCE_SYNCED"),a=t.includes("INITIAL_DEDUCTION")&&t.includes("GAME_FINISHED")&&t.includes("WS_BALANCE_DISCONNECTED")&&t.includes("WS_BALANCE_RECONNECTED")&&t.includes("RAW_BALANCE_SYNCED");return s||r||c||a}const f=(()=>{function i({identifier:e,betAmount:n,betPayout:l,currency:m}){f.add({type:"OPTIMISTIC_BALANCE_UPDATE",identifier:e,betAmount:n??0,betPayout:l??0,currency:m,balanceType:"available"})}const t=y(""),s=y(null),r=y({}),c=e=>{r.update(n=>{if(e.identifier in n)n[e.identifier]=b(e,n[e.identifier]),W(n[e.identifier])&&(n=u.omit(n,e.identifier));else if(e.type==="INITIAL_DEDUCTION"){const l=C(s),m=(l==null?void 0:l.type)!=="connected";n[e.identifier]=m?[{type:"WS_BALANCE_DISCONNECTED",identifier:e.identifier},e]:[e]}return n})};return{...r,lastSocketEvent:s,optimisticBalanceUpdate:i,addRawBalanceSyncedEvent:()=>{const e=n=>Object.keys(n).map(l=>({type:"RAW_BALANCE_SYNCED",identifier:l}));r.update(n=>k(e,n))},emitWebSocketBalanceUpdateEvent:e=>{const n=C(s);if((n==null?void 0:n.type)==="connected"){const m=d=>{const _=Object.keys(d).map(E=>{const I=d[E].find(A=>A.type==="INITIAL_DEDUCTION");if((I==null?void 0:I.currency)===e.balance.currency)return{type:"RAW_BALANCE_SYNCED",identifier:E}}).filter(E=>E!==void 0);return e.identifier!==""&&_.push({type:"WS_BALANCE_UPDATE",identifier:e.identifier,amount:e.amount??0,currency:e.balance.currency,balanceType:"available"}),_};f.update(d=>k(m,d))}else e.identifier!==""&&c({type:"WS_BALANCE_UPDATE",identifier:e.identifier,amount:e.amount??0,currency:e.balance.currency,balanceType:"available"})},add:c,addGlobalSocketEvent:e=>{if(s.set(e),e.type==="connected"){const n=C(r);for(const l in n)c({type:"WS_BALANCE_RECONNECTED",identifier:l})}else{const n=C(r);for(const l in n)c({type:"WS_BALANCE_DISCONNECTED",identifier:l})}},finishGame:e=>{t.set(e),c({type:"GAME_FINISHED",identifier:e})},rollback:e=>{c({type:"ROLLBACK",identifier:e})},create:e=>{const n=G();return c({type:"INITIAL_DEDUCTION",identifier:n,balanceType:"available",...e}),n},canProcessAvailableBalanceEmit:e=>{const n=C(r),l=n[e],m=Object.keys(n).filter(d=>d!==e).every(d=>n[d].some(E=>E.type==="GAME_FINISHED"));return!(l!=null&&l.some(d=>d.type==="OPTIMISTIC_BALANCE_UPDATE"))||C(t)===e&&m||!(l!=null&&l.some(d=>d.type==="GAME_FINISHED"))&&m}}})(),H=N([f],([i])=>Object.keys(i).reduce((s,r)=>{var E,I;const c=i[r],a=c.find(A=>A.type==="INITIAL_DEDUCTION"),o=a.amount??0,e=o+(((E=c.find(A=>A.type==="WS_BALANCE_UPDATE"))==null?void 0:E.amount)??0),n=c.find(A=>A.type==="OPTIMISTIC_BALANCE_UPDATE"),l=c.some(A=>A.type==="RAW_BALANCE_SYNCED")?c.some(A=>A.type==="GAME_FINISHED")?p(c,"OPTIMISTIC_BALANCE_UPDATE","RAW_BALANCE_SYNCED")?0:((n==null?void 0:n.betAmount)??0)-((n==null?void 0:n.betPayout)??0):c.some(A=>A.type==="OPTIMISTIC_BALANCE_UPDATE")&&p(c,"OPTIMISTIC_BALANCE_UPDATE","RAW_BALANCE_SYNCED")?(n==null?void 0:n.betPayout)??o:o:c.some(A=>A.type==="GAME_FINISHED")&&c.some(A=>A.type==="OPTIMISTIC_BALANCE_UPDATE")?((n==null?void 0:n.betAmount)??0)-((n==null?void 0:n.betPayout)??0):o,m=c.some(A=>A.type==="WS_BALANCE_UPDATE")?e:l,{currency:d}=a,_=a.balanceType;return d in s?s[d]={...s[d],[_]:(((I=s[d])==null?void 0:I[_])??0)+m}:(s[d]={available:0,vault:0},s[d][_]=m),s},{})),z=y(!1),h=(()=>{const i=u.mapValues(F,()=>({available:0,vault:0})),t=a=>u.fromPairs(a.map(o=>[o.available.currency,{available:o.available.amount,vault:o.vault.amount}])),s=(()=>{var a;{const e=S().readQuery(O);if((a=e==null?void 0:e.data)!=null&&a.user)return t(e.data.user.balances)}return i})(),r=y(s);return{...r,updateBalance:(a,o)=>{r.update(e=>({...e,[a]:o(e[a])}))},rawSet:a=>{r.set(t(a))},changeCurrencyAvailable:a=>{r.update(o=>({...o,[a.currency]:{...o[a.currency],available:a.amount}}))},changeCurrencyVault:a=>{r.update(o=>({...o,[a.currency]:{...o[a.currency],vault:a.amount}}))},fetch:async()=>{var n,l;const e=(l=(n=(await S().query(O,{},{requestPolicy:"network-only"}).toPromise()).data)==null?void 0:n.user)==null?void 0:l.balances;e&&(r.update(m=>({...m,...t(e)})),f.addRawBalanceSyncedEvent())}}})(),T=N([h,H,M],([i,t,s])=>u.pickBy(u.mapValues(i,(c,a)=>{var o,e;if(s.includes(a))return{...c,vault:D(c.vault-(((o=t==null?void 0:t[a])==null?void 0:o.vault)||0),a),available:D(c.available-(((e=t==null?void 0:t[a])==null?void 0:e.available)||0),a)}}),Boolean)),J=N([T],([i])=>Object.keys(i).filter(t=>i[t].available)),Q=N([T],([i])=>Object.keys(i).filter(t=>(i[t].available||i[t].vault)&&t in P)),X=N([T,B,L],([i,t,s])=>{const r=Object.keys(i),c=s==="crypto"?"usd":s;let a=0;return r.forEach(o=>{var n;const e=(n=t==null?void 0:t.rates)!=null&&n[o]?t.rates[o][c]*i[o].available:i[o].available;a+=e}),a}),Z=N([T,B,L],([i,t,s])=>{const r=Object.keys(i),c=s==="crypto"?"usd":s;let a=0;return r.forEach(o=>{var n;const e=(n=t==null?void 0:t.rates)!=null&&n[o]?t.rates[o][c]*i[o].vault:i[o].vault;a+=e}),a}),V=N([T,R],([i,t])=>{var s;return(s=i[t])==null?void 0:s.available}),q=y(!1);export{Q as a,T as b,f as c,V as d,Z as e,J as f,q as i,z as l,h as r,X as t};
